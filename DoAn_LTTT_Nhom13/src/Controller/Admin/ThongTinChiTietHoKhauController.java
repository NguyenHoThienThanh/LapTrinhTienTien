package Controller.Admin;

import DAOImplement.HoKhauDAOImpl;
import DAOImplement.QuanHeDAOImpl;
import InterfaceDAO.IHoKhauDAO;
import InterfaceService.IHoKhauService;
import Models.CongDanModel;
import Models.HoKhauModel;
import Models.QuanHeModel;
import Models.ThongTinHoKhau;
import ServiceImplement.CongDanServiceImpl;
import ServiceImplement.HoKhauServiceImpl;
import ServiceImplement.QuanHeServiceImpl;
import java.util.List;
import javax.swing.JDialog;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;


public class ThongTinChiTietHoKhauController extends javax.swing.JPanel {
    
    DefaultTableModel model;
    List<ThongTinHoKhau> listHoKhau;
    IHoKhauService hoKhauService = new HoKhauServiceImpl();
    
    HoKhauModel hoKhau = new HoKhauModel();
    IHoKhauDAO hoKhauDAO = new HoKhauDAOImpl();
    
    public ThongTinChiTietHoKhauController() {
        initComponents();
        model = (DefaultTableModel)tb_HK.getModel();
        
    }
    
    private void showTable() {
        for (ThongTinHoKhau hoKhau : listHoKhau) {
            model.addRow(new Object[]{hoKhau.getMaHoKhau(), hoKhau.getKhaiSinhChuHo(), hoKhau.getHoTenChuHo(), hoKhau.getKhaiSinhNguoiThamGia(), hoKhau.getHoTenNguoiThan(), hoKhau.getQuanHeVoiChuHo(), hoKhau.getDiaChi()});
        }
    } 

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tf_hoTenChuHo = new Swing.TextField();
        tf_maHoKhau = new Swing.TextField();
        tf_hoTenNguoiThan = new Swing.TextField();
        tf_maKhaiSinhChuHo = new Swing.TextField();
        tf_maKhaiSinhNguoiThan = new Swing.TextField();
        tf_quanHeChuHo = new Swing.TextField();
        jLabel1 = new javax.swing.JLabel();
        tf_diaChi = new Swing.TextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tb_HK = new Swing.TableDark();
        btn_catKhau = new Swing.Button();
        btn_themNguoiVaoHoKhau = new Swing.Button();
        btn_nhapMaHK = new Swing.Button();
        btn_luuThem = new Swing.Button();
        jLabel2 = new javax.swing.JLabel();
        btn_timTheoMaHoKhau1 = new Swing.Button();
        btn_xoaDuLieu = new Swing.Button();
        btn_luuSua = new Swing.Button();
        btn_suaThongTin = new Swing.Button();

        setBackground(new java.awt.Color(255, 255, 255));

        tf_hoTenChuHo.setEditable(false);
        tf_hoTenChuHo.setLabelText("Họ và tên chủ hộ");

        tf_maHoKhau.setEditable(false);
        tf_maHoKhau.setLabelText("Mã hộ khẩu");

        tf_hoTenNguoiThan.setEditable(false);
        tf_hoTenNguoiThan.setLabelText("Họ tên người thân");

        tf_maKhaiSinhChuHo.setEditable(false);
        tf_maKhaiSinhChuHo.setLabelText("Mã khai sinh chủ hộ");

        tf_maKhaiSinhNguoiThan.setEditable(false);
        tf_maKhaiSinhNguoiThan.setLabelText("Mã KS người thân");

        tf_quanHeChuHo.setEditable(false);
        tf_quanHeChuHo.setLabelText("Quan hệ với chủ hộ");

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 0, 51));
        jLabel1.setText("THÔNG TIN CHI TIẾT HỘ KHẨU");

        tf_diaChi.setEditable(false);
        tf_diaChi.setLabelText("Địa chỉ");

        tb_HK.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã hộ khẩu", "Mã KS chủ hộ", "Họ và tên chủ hộ", "Mã KS người thân", "Họ và tên người thân", "Quan hệ với chủ hộ", "Địa chỉ"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tb_HK.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tb_HKMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tb_HK);
        if (tb_HK.getColumnModel().getColumnCount() > 0) {
            tb_HK.getColumnModel().getColumn(0).setPreferredWidth(22);
            tb_HK.getColumnModel().getColumn(1).setPreferredWidth(22);
            tb_HK.getColumnModel().getColumn(2).setPreferredWidth(25);
            tb_HK.getColumnModel().getColumn(3).setPreferredWidth(22);
            tb_HK.getColumnModel().getColumn(4).setPreferredWidth(25);
            tb_HK.getColumnModel().getColumn(5).setPreferredWidth(20);
        }

        btn_catKhau.setBackground(new java.awt.Color(18, 99, 63));
        btn_catKhau.setForeground(new java.awt.Color(255, 255, 255));
        btn_catKhau.setText("Cắt khẩu");
        btn_catKhau.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_catKhauActionPerformed(evt);
            }
        });

        btn_themNguoiVaoHoKhau.setBackground(new java.awt.Color(18, 99, 63));
        btn_themNguoiVaoHoKhau.setForeground(new java.awt.Color(255, 255, 255));
        btn_themNguoiVaoHoKhau.setText("Thêm người vào hộ khẩu");
        btn_themNguoiVaoHoKhau.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_themNguoiVaoHoKhauActionPerformed(evt);
            }
        });

        btn_nhapMaHK.setBackground(new java.awt.Color(18, 99, 63));
        btn_nhapMaHK.setForeground(new java.awt.Color(255, 255, 255));
        btn_nhapMaHK.setText("Nhập mã hộ khẩu");
        btn_nhapMaHK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_nhapMaHKActionPerformed(evt);
            }
        });

        btn_luuThem.setBackground(new java.awt.Color(18, 99, 63));
        btn_luuThem.setForeground(new java.awt.Color(255, 255, 255));
        btn_luuThem.setText("Lưu thêm");
        btn_luuThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_luuThemActionPerformed(evt);
            }
        });

        jLabel2.setText("Nhập mã HK cần tìm");

        btn_timTheoMaHoKhau1.setBackground(new java.awt.Color(18, 99, 63));
        btn_timTheoMaHoKhau1.setForeground(new java.awt.Color(255, 255, 255));
        btn_timTheoMaHoKhau1.setText("Tìm theo mã hộ khẩu");
        btn_timTheoMaHoKhau1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_timTheoMaHoKhau1ActionPerformed(evt);
            }
        });

        btn_xoaDuLieu.setBackground(new java.awt.Color(18, 99, 63));
        btn_xoaDuLieu.setForeground(new java.awt.Color(255, 255, 255));
        btn_xoaDuLieu.setText("Xóa dữ liệu");
        btn_xoaDuLieu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_xoaDuLieuActionPerformed(evt);
            }
        });

        btn_luuSua.setBackground(new java.awt.Color(18, 99, 63));
        btn_luuSua.setForeground(new java.awt.Color(255, 255, 255));
        btn_luuSua.setText("Lưu sửa");
        btn_luuSua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_luuSuaActionPerformed(evt);
            }
        });

        btn_suaThongTin.setBackground(new java.awt.Color(18, 99, 63));
        btn_suaThongTin.setForeground(new java.awt.Color(255, 255, 255));
        btn_suaThongTin.setText("Sửa thông tin");
        btn_suaThongTin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_suaThongTinActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 855, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(56, 56, 56)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(tf_diaChi, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                            .addComponent(tf_maHoKhau, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                            .addComponent(tf_maKhaiSinhChuHo, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                            .addComponent(tf_hoTenChuHo, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(18, 18, 18)
                                            .addComponent(tf_maKhaiSinhNguoiThan, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(18, 18, 18)
                                            .addComponent(tf_hoTenNguoiThan, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(18, 18, 18)
                                            .addComponent(tf_quanHeChuHo, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btn_nhapMaHK, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btn_timTheoMaHoKhau1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(36, 36, 36)
                                .addComponent(btn_themNguoiVaoHoKhau, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btn_luuThem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btn_suaThongTin, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btn_luuSua, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(34, 34, 34)
                                .addComponent(btn_catKhau, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(36, 36, 36)
                                .addComponent(btn_xoaDuLieu, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(319, 319, 319)
                        .addComponent(jLabel1)))
                .addContainerGap(35, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(3, 3, 3)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tf_hoTenChuHo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tf_maKhaiSinhChuHo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tf_maHoKhau, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tf_maKhaiSinhNguoiThan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tf_hoTenNguoiThan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tf_quanHeChuHo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(tf_diaChi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 253, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_themNguoiVaoHoKhau, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_nhapMaHK, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_luuThem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_timTheoMaHoKhau1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_xoaDuLieu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_catKhau, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_luuSua, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_suaThongTin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(38, 38, 38))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btn_catKhauActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_catKhauActionPerformed
        int selectedRow = tb_HK.getSelectedRow(); // Lấy chỉ số hàng được chọn trong bảng
        if (tb_HK.getRowCount() <= 0) {
            JOptionPane dialog = new JOptionPane("Bảng rỗng!", JOptionPane.WARNING_MESSAGE);
            JDialog jDialog = dialog.createDialog(null);
            jDialog.setModal(true);
            jDialog.setVisible(true);
        } else if (selectedRow < 0) {
            JOptionPane dialog = new JOptionPane("Vui lòng chọn một trường cần xóa!", JOptionPane.WARNING_MESSAGE);
            JDialog jDialog = dialog.createDialog(null);
            jDialog.setModal(true);
            jDialog.setVisible(true);
        } else if (selectedRow >= 0) {
            JPanel myPanel = new JPanel();
            int confirm = JOptionPane.showConfirmDialog(myPanel, "Bạn có chắc chắn muốn xóa không?", "", JOptionPane.YES_NO_OPTION);
            if (confirm == JOptionPane.YES_OPTION) {
                try {
                    model.removeRow(selectedRow);
                    listHoKhau.remove(selectedRow);
                    if (new QuanHeDAOImpl().deleteHK(tf_maKhaiSinhNguoiThan.getText())) {
                        JOptionPane msg = new JOptionPane("Xóa thành công!", JOptionPane.INFORMATION_MESSAGE);
                        JDialog jMsg = msg.createDialog(null);
                        jMsg.setModal(true);
                        jMsg.setVisible(true);
                    } else {
                        JOptionPane msgFail = new JOptionPane("Xóa thất bại!", JOptionPane.ERROR_MESSAGE);
                        JDialog jMsgFail = msgFail.createDialog(null);
                        jMsgFail.setModal(true);
                        jMsgFail.setVisible(true);
                    }

                } catch (Exception e) {
                    JOptionPane msgFail = new JOptionPane("Xóa thất bại!", JOptionPane.ERROR_MESSAGE);
                    JDialog jMsgFail = msgFail.createDialog(null);
                    jMsgFail.setModal(true);
                    jMsgFail.setVisible(true);
                }
                clearTextFields();
            }
        }
    }//GEN-LAST:event_btn_catKhauActionPerformed
    private void clear() {
        tf_quanHeChuHo.setText("");
        tf_maKhaiSinhNguoiThan.setText("");
        tf_hoTenNguoiThan.setText("");
    }
    private void btn_themNguoiVaoHoKhauActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_themNguoiVaoHoKhauActionPerformed

        if(tf_maHoKhau.getText().equals("")){
            JOptionPane dialog = new JOptionPane("Hãy nhập mã hộ khẩu chủ hộ!", JOptionPane.INFORMATION_MESSAGE);
            JDialog jDialog = dialog.createDialog(null);
            jDialog.setModal(true);
            jDialog.setVisible(true);
            return;
        }
        QuanHeModel quanHe = new QuanHeModel();
        HoKhauModel hoKhau = new HoKhauDAOImpl().findOneMaHK(tf_maHoKhau.getText());
        quanHe.setTrangThai(1);
        
        tf_maKhaiSinhChuHo.setText(hoKhau.getKhaiSinhChuHo());
        tf_hoTenChuHo.setText(hoKhau.getHoTen());
        tf_diaChi.setText(hoKhau.getDiaChi());
        ableTextFields();
        clear();
    }//GEN-LAST:event_btn_themNguoiVaoHoKhauActionPerformed
    public void showResult() {
        listHoKhau = hoKhauService.findAllHoKhauUser(tf_maHoKhau.getText());
        ThongTinHoKhau hoKhau = listHoKhau.get(listHoKhau.size() - 1);
        model.fireTableDataChanged();
        model.addRow(new Object[]{hoKhau.getMaHoKhau(), hoKhau.getKhaiSinhChuHo(), hoKhau.getHoTenChuHo(), hoKhau.getKhaiSinhNguoiThamGia(), hoKhau.getHoTenNguoiThan(), hoKhau.getQuanHeVoiChuHo(), hoKhau.getDiaChi()});
    }
    
    private void btn_nhapMaHKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_nhapMaHKActionPerformed
        clearTable();
        clearTextFields();
        disableALLTextFields();
        tf_maHoKhau.setEditable(true);
    }//GEN-LAST:event_btn_nhapMaHKActionPerformed
    private void ableTextFields(){
        tf_maKhaiSinhNguoiThan.setEditable(true);
        tf_quanHeChuHo.setEditable(true);
    }
    
    private void disableALLTextFields() {
        tf_maHoKhau.setEditable(false);
        tf_maKhaiSinhChuHo.setEditable(false);
        tf_hoTenChuHo.setEditable(false);
        tf_maKhaiSinhNguoiThan.setEditable(false);
        tf_quanHeChuHo.setEditable(false);
        tf_hoTenNguoiThan.setEditable(false);
        tf_diaChi.setEditable(false);
    }
    
    private void disableTextFields() {
        tf_maKhaiSinhChuHo.setEditable(false);
        tf_hoTenChuHo.setEditable(false);
        tf_hoTenNguoiThan.setEditable(false);
        tf_diaChi.setEditable(false);
    }
    private void clearTextFieldsWithoutMaHK() {
        tf_maKhaiSinhChuHo.setText("");
        tf_hoTenChuHo.setText("");
        tf_maKhaiSinhNguoiThan.setText("");
        tf_hoTenNguoiThan.setText("");
        tf_quanHeChuHo.setText("");
        tf_diaChi.setText("");
    }
    
    private void clearTextFields() {
        tf_maHoKhau.setText("");
        tf_maKhaiSinhChuHo.setText("");
        tf_hoTenChuHo.setText("");
        tf_maKhaiSinhNguoiThan.setText("");
        tf_hoTenNguoiThan.setText("");
        tf_quanHeChuHo.setText("");
        tf_diaChi.setText("");
    }
    
    private void clearTable() {
        DefaultTableModel model = (DefaultTableModel) tb_HK.getModel();
        model.setRowCount(0);
    }
    
    private void disableTextField() {
        tf_maKhaiSinhNguoiThan.setEditable(true);
        tf_quanHeChuHo.setEditable(true);
    }
    
    private boolean checkMaHoKhau(String maHoKhau) {
        
        // Kiểm tra các ký tự đầu tiên là "HK"
        if (!maHoKhau.startsWith("HK")) {
            return false;
        }

        // Kiểm tra phần số ở phía sau
        String soPhiaSau = maHoKhau.substring(2);
        try {
            int so = Integer.parseInt(soPhiaSau);
            // Kiểm tra số phía sau có là số dương không
            if (so <= 0) {
                return false;
            }
        } catch (NumberFormatException e) {
            return false;
        }

        return true;
    }
    private boolean checkQuanHeChuHo(String quanHe) {
        String[] validQuanHe = {
            "vợ", "chồng", "cha đẻ", "mẹ đẻ", "cha nuôi", "mẹ nuôi", "con đẻ", "con nuôi", "con trai", "con gái",
            "ông nội", "bà nội", "ông ngoại", "bà ngoại", "anh ruột", "chị ruột", "em ruột", "cháu ruột",
            "cụ nội", "cụ ngoại", "bác ruột", "chú ruột", "cậu ruột", "cô ruột", "dì ruột", "chắt ruột",
            "người giám hộ", "ở nhờ", "ở mượn", "ở thuê", "cùng ở nhờ", "cùng ở thuê", "cùng ở mượn"
        };

        for (String validQuanHeItem : validQuanHe) {
            if (validQuanHeItem.equalsIgnoreCase(quanHe)) {
                return true;
            }
        }

        return false;
    }
    private boolean checkMaKhaiSinh(String maKhaiSinh) {
        
        // Kiểm tra các ký tự đầu tiên là "HK"
        if (!maKhaiSinh.startsWith("KS")) {
            return false;
        }

        // Kiểm tra phần số ở phía sau
        String soPhiaSau = maKhaiSinh.substring(2);
        try {
            int so = Integer.parseInt(soPhiaSau);
            // Kiểm tra số phía sau có là số dương không
            if (so <= 0) {
                return false;
            }
        } catch (NumberFormatException e) {
            return false;
        }

        return true;
    }
    
    private void tb_HKMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tb_HKMouseClicked
        model = (DefaultTableModel) tb_HK.getModel();
        tf_maHoKhau.setText(model.getValueAt(tb_HK.getSelectedRow(), 0).toString());
        tf_maKhaiSinhChuHo.setText(model.getValueAt(tb_HK.getSelectedRow(), 1).toString());
        tf_hoTenChuHo.setText(model.getValueAt(tb_HK.getSelectedRow(), 2).toString());
        tf_maKhaiSinhNguoiThan.setText(model.getValueAt(tb_HK.getSelectedRow(), 3).toString());
        tf_hoTenNguoiThan.setText(model.getValueAt(tb_HK.getSelectedRow(), 4).toString());
        tf_quanHeChuHo.setText(model.getValueAt(tb_HK.getSelectedRow(), 5).toString());
        tf_diaChi.setText(model.getValueAt(tb_HK.getSelectedRow(), 6).toString());
    }//GEN-LAST:event_tb_HKMouseClicked

    private void btn_luuThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_luuThemActionPerformed
        ThongTinHoKhau hoKhau = new ThongTinHoKhau();
        QuanHeModel quanHe = new QuanHeModel();
        
        quanHe.setMaHK(tf_maHoKhau.getText());
        
        hoKhau.setKhaiSinhChuHo(tf_maKhaiSinhChuHo.getText());
        hoKhau.setHoTenChuHo(tf_hoTenChuHo.getText());
        
        quanHe.setKhaiSinhNguoiThamGia(tf_maKhaiSinhNguoiThan.getText());
        
        hoKhau.setHoTenNguoiThan(tf_hoTenNguoiThan.getText());
        
        quanHe.setQuanHeVoiChuHo(tf_quanHeChuHo.getText());
        
        hoKhau.setDiaChi(tf_diaChi.getText());        
        
        quanHe.setTrangThai(1);
        
        String maKhaiSinh = (tf_maKhaiSinhNguoiThan.getText().trim());
        
        if(tf_maHoKhau.getText().equals("")){
            JOptionPane dialog = new JOptionPane("Hãy nhập mã hộ khẩu chủ hộ!", JOptionPane.INFORMATION_MESSAGE);
            JDialog jDialog = dialog.createDialog(null);
            jDialog.setModal(true);
            jDialog.setVisible(true);
            return;
        }
        
        if (tf_quanHeChuHo.getText().equals("") || tf_maKhaiSinhNguoiThan.getText().equals("")) {
            JOptionPane dialog = new JOptionPane("Vui lòng điền đầy đủ Mã khai sinh người thân và Quan hệ với chủ hộ!", JOptionPane.WARNING_MESSAGE);
            JDialog jDialog = dialog.createDialog(null);
            jDialog.setModal(true);
            jDialog.setVisible(true);
            return;
        }
        
        if (!checkMaKhaiSinh(maKhaiSinh)){
            JOptionPane dialog = new JOptionPane("Mã khai sinh không hợp lệ!", JOptionPane.INFORMATION_MESSAGE);
                JDialog jDialog = dialog.createDialog(null);
                jDialog.setModal(true);
                jDialog.setVisible(true);
            return;
        }
        if (!checkQuanHeChuHo(tf_quanHeChuHo.getText().trim())) {
            JOptionPane dialog = new JOptionPane("Quan hệ với chủ hộ không hợp lệ!", JOptionPane.WARNING_MESSAGE);
            JDialog jDialog = dialog.createDialog(null);
            jDialog.setModal(true);
            jDialog.setVisible(true);
            return;
        }
        if (hoKhauService.ifExists(tf_maKhaiSinhNguoiThan.getText().trim()) == 1) {
            JOptionPane dialog = new JOptionPane("Công dân này đã có hộ khẩu!", JOptionPane.WARNING_MESSAGE);
            JDialog jDialog = dialog.createDialog(null);
            jDialog.setModal(true);
            jDialog.setVisible(true);
            return;
        }
        if (hoKhauService.existsHoKhauOrNot(tf_maKhaiSinhNguoiThan.getText().trim()) == 1) {
            JOptionPane dialog = new JOptionPane("Mỗi công dân chỉ có 1 hộ khẩu!", JOptionPane.WARNING_MESSAGE);
            JDialog jDialog = dialog.createDialog(null);
            jDialog.setModal(true);
            jDialog.setVisible(true);
            return;
        }
        listHoKhau.add(hoKhau);
        // Thêm dữ liệu vào bảng
        
        if (new QuanHeServiceImpl().insert(quanHe)) {
                JOptionPane dialog = new JOptionPane("Thêm thông tin thành công!", JOptionPane.INFORMATION_MESSAGE);
                JDialog jDialog = dialog.createDialog(null);
                jDialog.setModal(true);
                jDialog.setVisible(true);
            } else {
                JOptionPane dialog = new JOptionPane("Thêm thông tin thất bại!", JOptionPane.INFORMATION_MESSAGE);
                JDialog jDialog = dialog.createDialog(null);
                jDialog.setModal(true);
                jDialog.setVisible(true);
                return;
            }
            showResult();
            clearTextFields();
    }//GEN-LAST:event_btn_luuThemActionPerformed

    private void btn_timTheoMaHoKhau1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_timTheoMaHoKhau1ActionPerformed
        clearTable();
        HoKhauModel hoKhau = new HoKhauDAOImpl().findOneMaHK(tf_maHoKhau.getText());
        CongDanModel congDan = new CongDanServiceImpl().findOneByMaKS(hoKhau.getKhaiSinhChuHo());
                
        String maHoKhau = tf_maHoKhau.getText().trim();
        
        if (tf_maHoKhau.getText().equals("")) {
            JOptionPane dialog = new JOptionPane("Vui lòng điền mã hộ khẩu cần tìm!", JOptionPane.WARNING_MESSAGE);
            JDialog jDialog = dialog.createDialog(null);
            jDialog.setModal(true);
            jDialog.setVisible(true);
            return;
        }
        
        if (!checkMaHoKhau(maHoKhau)) {
            JOptionPane dialog = new JOptionPane("Mã hộ khẩu không hợp lệ!", JOptionPane.INFORMATION_MESSAGE);
                JDialog jDialog = dialog.createDialog(null);
                jDialog.setModal(true);
                jDialog.setVisible(true);
            return;
        }
        
        if(congDan.getTrangThai() == 0){
            JOptionPane dialog = new JOptionPane("Hộ khẩu không tồn tại!", JOptionPane.INFORMATION_MESSAGE);
            JDialog jDialog = dialog.createDialog(null);
            jDialog.setModal(true);
            jDialog.setVisible(true);
            clearTextFields();
            disableTextFields();
            return;
        }
        
        listHoKhau = hoKhauService.findAllHoKhauUser(maHoKhau);
        showTable();
        
        tf_maKhaiSinhChuHo.setText(hoKhau.getKhaiSinhChuHo());
        tf_hoTenChuHo.setText(hoKhau.getHoTen());
        tf_diaChi.setText(hoKhau.getDiaChi());
                
        clearTextFieldsWithoutMaHK();
        disableTextFields();
    }//GEN-LAST:event_btn_timTheoMaHoKhau1ActionPerformed

    private void btn_xoaDuLieuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_xoaDuLieuActionPerformed
        clearTextFields();
    }//GEN-LAST:event_btn_xoaDuLieuActionPerformed

    private void btn_luuSuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_luuSuaActionPerformed
        try {
            int selectedRow = tb_HK.getSelectedRow();
            if (tb_HK.getRowCount() <= 0) {
                JOptionPane dialog = new JOptionPane("Bảng không có dữ liệu!", JOptionPane.WARNING_MESSAGE);
                JDialog jDialog = dialog.createDialog(null);
                jDialog.setModal(true);
                jDialog.setVisible(true);
                return;
            } else if (selectedRow < 0) {
                JOptionPane dialog = new JOptionPane("Hãy chọn một hàng cần sửa thông tin!", JOptionPane.WARNING_MESSAGE);
                JDialog jDialog = dialog.createDialog(null);
                jDialog.setModal(true);
                jDialog.setVisible(true);
                return;
            } else if (selectedRow >= 0) {
                HoKhauModel hoKhau = hoKhauService.findOneByMaHK(tf_maHoKhau.getText());
                hoKhau.setDiaChi(tf_diaChi.getText());

                if (new HoKhauServiceImpl().update(hoKhau)) {
                    JOptionPane dialog = new JOptionPane("Sửa thành công!", JOptionPane.INFORMATION_MESSAGE);
                    JDialog jDialog = dialog.createDialog(null);
                    jDialog.setModal(true);
                    jDialog.setVisible(true);
                    model.setValueAt(tf_quanHeChuHo.getText(), selectedRow, 5);
                    model.setValueAt(tf_diaChi.getText(), selectedRow, 6);
                    model.fireTableDataChanged();
                } else {
                    JOptionPane dialog = new JOptionPane("Sửa thất bại!", JOptionPane.INFORMATION_MESSAGE);
                    JDialog jDialog = dialog.createDialog(null);
                    jDialog.setModal(true);
                    jDialog.setVisible(true);
                    return;
                }
            }
        } catch (Exception e) {
        }
        clear();
        disableTextField();                            
    }//GEN-LAST:event_btn_luuSuaActionPerformed

    private void btn_suaThongTinActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_suaThongTinActionPerformed
        if (tb_HK.getSelectedRow() < 0) {
            JOptionPane dialog = new JOptionPane("Hãy chọn một hàng cần sửa thông tin!", JOptionPane.WARNING_MESSAGE);
            JDialog jDialog = dialog.createDialog(null);
            jDialog.setModal(true);
            jDialog.setVisible(true);
            return;
        } else {
            tf_maHoKhau.setEditable(false);
            tf_diaChi.setEditable(true);
            tf_maKhaiSinhChuHo.setEditable(false);
            tf_hoTenChuHo.setEditable(false);
            tf_maKhaiSinhNguoiThan.setEditable(false);
            tf_hoTenNguoiThan.setEditable(false);
            tf_quanHeChuHo.setEditable(true);
        }
    }//GEN-LAST:event_btn_suaThongTinActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private Swing.Button btn_catKhau;
    private Swing.Button btn_luuSua;
    private Swing.Button btn_luuThem;
    private Swing.Button btn_nhapMaHK;
    private Swing.Button btn_suaThongTin;
    private Swing.Button btn_themNguoiVaoHoKhau;
    private Swing.Button btn_timTheoMaHoKhau1;
    private Swing.Button btn_xoaDuLieu;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private Swing.TableDark tb_HK;
    private Swing.TextField tf_diaChi;
    private Swing.TextField tf_hoTenChuHo;
    private Swing.TextField tf_hoTenNguoiThan;
    private Swing.TextField tf_maHoKhau;
    private Swing.TextField tf_maKhaiSinhChuHo;
    private Swing.TextField tf_maKhaiSinhNguoiThan;
    private Swing.TextField tf_quanHeChuHo;
    // End of variables declaration//GEN-END:variables

}
